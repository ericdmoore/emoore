// x (priorityGrp) Dates[completed, created] Description{ +projectTag @contextTag due:DATE }
// https://github.com/todotxt/todo.txt

(ongoing) Deploys
- Pre-Deploy Tests = Jest
- Post-Deploy Tests?
- - Make a Link and Delete a Link?
- - - Verify User Account Login?
- - - Using a Test User Account?
- Using Github Actions?
- - Secrets Management for CDK cli?

Make a Short Link
- (Preconditions)
- - how to seed user accounts during deployment?
- - 1. deploy with an admin who can add users shoud there be a loss of data
- - 2. users application requests are open, but not accepted until a verification signature is added to the same request.


API = Gateway -> Lambda -> DynamoDB -> CDN(S3 Bucket.webServing)

- Gateway creates HTTP Endpoints for Lmabda logic
- Lambda logic organizes Data in DynamoDB + S3
- DynamoDB is the data source of truth
- CDN/S3 for a serving layer



Lambda will need:
- read/write access to Dyanmo table
- read/write access to the Web S3 Bucket



MVP
- Deployed lambda
- No Users
- No Click Reporting



Using S3 as the serving layer, means we need to 
- plan out how to collect click Data
    1. on page-load, js emits data, then redirects to destination
    2. S3 has a redirect encoded to the S3 Key, but then how do we get the click data?
        1. Click logs can exist in the S3 Logs Bucket 
        2. Cron job to process the logs to



Click a Short Link
- Web Serving Tier?
- CloudFront over the API? over S3?



View Stats/Reports For Clicked Links
- via API response
- via a UI



Questions:
- What to do about an authToken if its compromised?
- - if I know (aka: I accidentally put it in public repo?)
- - - before it expires
- - - then it expires
- - if I dont know (aka: I inject it responsibly but other userscript, performs advsnced capture)
- - - before it expires
- - - then it expires



