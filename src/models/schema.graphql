# >> schema.graphql

# """ 
# GraphQL Schema for emoo.re
# """
# schema {
#   Query: Query
#   Mutation: Mutation
# }


""" 
Base Query Operation
"""
type Query {
  
  """ 
  I am logged in as me (see below), 
  but I might make changes or view data on behalf of another user
  based on an optional userToken, 
  if the `userToken` header is missing, 
  then you act for `me`
  """
  activeUser: User

  """ 
  This is Me based on my authToken
  """
  me: User
}

"""
Base Mutation Operations
"""
type Mutation{
    """
    To Make Changes to the Active User
    """
    getUserToken(
  
      """ 
      Give the permissionToken, from the granting user
      """
      token: String
    ): User
}

 
"""
Base User Definition
"""
type User {
  """
  User ID String
  """
  id: ID

  """
  Name of the User
  """
  name: String
}

"""
Changeable Portions of User
"""
input UserInput {
  """ 
  Name of A User
  """
  name: String 
}

"""
Connection Spec PageInfo
"""
type PageInfo {

  """
  Want to Cut to the end?
  """
  endCursor: String

  """
  Is There more paging?
  """
  hasNextPage: Boolean!

  """
  Are there pages before this one?
  """
  hasPreviousPage: Boolean!

  """
  Want to Start Over at the beginning?
  """
  startCursor: String
}